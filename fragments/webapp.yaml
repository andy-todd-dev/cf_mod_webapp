AWSTemplateFormatVersion: 2010-09-09

Parameters:
  AppDomain:
    Type: String
    Description: "The domain from where the app will be reached"
  S3BucketName:
    Type: String
    Description: "Name of S3 bucket"
  StagingCName:
    Type: String
    Description: "CName where staging is hosted"
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      WebsiteConfiguration:
        ErrorDocument: "index.html"
        IndexDocument: "index.html"
  ReadPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Action: "s3:GetObject"
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
            Principal: 
              Service: "cloudfront.amazonaws.com"
            Condition: 
              StringEquals: 
                  "AWS:SourceArn": !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"

  HostedZone:
    Type: "AWS::Route53::HostedZone"
    Properties:
      Name: !Ref AppDomain
  ZoneRecords:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId:
        Ref: HostedZone
      RecordSets:
        - Type: A
          Name: !Ref AppDomain
          AliasTarget:
            HostedZoneId: "Z2FDTNDATAQYW2"
            DNSName:
              "Fn::GetAtt": ["CloudFrontDistribution", "DomainName"]
        - Type: CNAME
          Name: !Sub staging.${AppDomain}
          TTL: 600
          ResourceRecords:
            - !Ref StagingCName

  ACMCertificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName: !Ref AppDomain
      DomainValidationOptions:
        - DomainName: !Ref AppDomain
          HostedZoneId:
            Ref: HostedZone
      ValidationMethod: DNS

  # Configure Access to CloudFront
  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: static-hosting-OAC
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # Configure CloudFront
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref AppDomain
        ViewerCertificate:
          SslSupportMethod: sni-only
          AcmCertificateArn:
            Ref: ACMCertificate
        CustomErrorResponses:
          - ErrorCode: 403 # forbidden
            ResponseCode: 200
            ResponsePagePath: "/index.html"
          - ErrorCode: 404 # not found
            ResponseCode: 200
            ResponsePagePath: "/index.html"
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 3600 # in seconds
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          MaxTTL: 86400 # in seconds
          MinTTL: 60 # in seconds
          TargetOriginId: s3websiteorigin
          ViewerProtocolPolicy: "allow-all"
        # This DefaultRootObject configuration is not enough.
        DefaultRootObject: "/index.html"
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !GetAtt "S3Bucket.DomainName"
            Id: s3websiteorigin
            S3OriginConfig:
              OriginAccessIdentity: ""
            OriginAccessControlId: !Ref CloudFrontOriginAccessControl
        PriceClass: "PriceClass_All"
